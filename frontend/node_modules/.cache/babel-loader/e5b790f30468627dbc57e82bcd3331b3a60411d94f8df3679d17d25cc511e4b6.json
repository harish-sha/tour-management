{"ast":null,"code":"var _jsxFileName = \"D:\\\\Harish personal Docs\\\\Web_Projects\\\\Tour_Management\\\\tour-management\\\\frontend\\\\src\\\\pages\\\\TourDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"../services/tour-details.css\";\nimport { Container, Row, Col, Form, ListGroup } from \"reactstrap\";\nimport { useParams } from \"react-router-dom\";\nimport tourData from \"../assets/data/tours.js\";\nimport calculateAvgRating from \"../utils/avgRating.js\";\nimport avatar from \"../assets/images/avatar.jpg\";\nimport Booking from \"../components/Booking/Booking.jsx\";\nimport NewsLetter from \"../shared/NewsLetter.jsx\";\nimport useFetch from \"../hooks/useFetch.js\";\nimport { BASE_URL } from \"../utils/config.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TourDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const reviewMsgRef = useRef(\"\");\n  const [tourRating, setTourRating] = useState(null);\n\n  //fetch data from database\n  // const tour = tourData.find(tour => tour.id === id)\n  // const { data: tour } = useFetch(`${BASE_URL}/tours/${id}`);\n\n  const {\n    data: tour,\n    error,\n    isLoading\n  } = useFetch(`${BASE_URL}/tours/${id}`);\n  if (error) {\n    console.error(error);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n\n  // desctruture  properties from tour object\n  const {\n    photo,\n    title,\n    desc,\n    price,\n    reviews,\n    city,\n    address,\n    distance,\n    maxGroupSize\n  } = tour;\n  const {\n    totalRating,\n    avgRating\n  } = calculateAvgRating(reviews);\n\n  // format date\n  const options = {\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\"\n  };\n\n  // Submit request to the server\n  const submitHandler = e => {\n    e.preventDefault();\n    const reviewText = reviewMsgRef.current.value;\n\n    // later will call our api\n  };\n\n  // useEffect(() => {\n  //   window.scrollTo(0, 0);\n  // });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: !loading && !error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewsLetter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(TourDetails, \"SxGzHJUTv0xscmVnnr2acYvcz1Q=\", false, function () {\n  return [useParams, useFetch];\n});\n_c = TourDetails;\nexport default TourDetails;\nvar _c;\n$RefreshReg$(_c, \"TourDetails\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Container","Row","Col","Form","ListGroup","useParams","tourData","calculateAvgRating","avatar","Booking","NewsLetter","useFetch","BASE_URL","TourDetails","id","reviewMsgRef","tourRating","setTourRating","data","tour","error","isLoading","console","message","photo","title","desc","price","reviews","city","address","distance","maxGroupSize","totalRating","avgRating","options","day","month","year","submitHandler","e","preventDefault","reviewText","current","value","loading"],"sources":["D:/Harish personal Docs/Web_Projects/Tour_Management/tour-management/frontend/src/pages/TourDetails.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"../services/tour-details.css\";\r\nimport { Container, Row, Col, Form, ListGroup } from \"reactstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport tourData from \"../assets/data/tours.js\";\r\nimport calculateAvgRating from \"../utils/avgRating.js\";\r\nimport avatar from \"../assets/images/avatar.jpg\";\r\nimport Booking from \"../components/Booking/Booking.jsx\";\r\nimport NewsLetter from \"../shared/NewsLetter.jsx\";\r\nimport useFetch from \"../hooks/useFetch.js\";\r\nimport { BASE_URL } from \"../utils/config.js\";\r\n\r\nconst TourDetails = () => {\r\n  const { id } = useParams();\r\n  const reviewMsgRef = useRef(\"\");\r\n  const [tourRating, setTourRating] = useState(null);\r\n\r\n  //fetch data from database\r\n  // const tour = tourData.find(tour => tour.id === id)\r\n  // const { data: tour } = useFetch(`${BASE_URL}/tours/${id}`);\r\n\r\n  const { data: tour, error, isLoading } = useFetch(`${BASE_URL}/tours/${id}`);\r\n\r\n  if (error) {\r\n    console.error(error);\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n\r\n\r\n  // desctruture  properties from tour object\r\n  const {\r\n    photo,\r\n    title,\r\n    desc,\r\n    price,\r\n    reviews,\r\n    city,\r\n    address,\r\n    distance,\r\n    maxGroupSize,\r\n  } = tour;\r\n\r\n  const { totalRating, avgRating } = calculateAvgRating(reviews);\r\n\r\n  // format date\r\n  const options = { day: \"numeric\", month: \"long\", year: \"numeric\" };\r\n\r\n  // Submit request to the server\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const reviewText = reviewMsgRef.current.value;\r\n\r\n    // later will call our api\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   window.scrollTo(0, 0);\r\n  // });\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <Container>\r\n          {\r\n            !loading && !error \r\n          }\r\n \r\n        </Container>\r\n      </section>\r\n      <NewsLetter />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TourDetails;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,8BAA8B;AACrC,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,SAAS,QAAQ,YAAY;AACjE,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,OAAOC,kBAAkB,MAAM,uBAAuB;AACtD,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,OAAO,MAAM,mCAAmC;AACvD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,QAAQ,QAAQ,oBAAoB;AAAC;AAAA;AAE9C,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,EAAE;EAC1B,MAAMU,YAAY,GAAGjB,MAAM,CAAC,EAAE,CAAC;EAC/B,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;;EAElD;EACA;EACA;;EAEA,MAAM;IAAEmB,IAAI,EAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGV,QAAQ,CAAE,GAAEC,QAAS,UAASE,EAAG,EAAC,CAAC;EAE5E,IAAIM,KAAK,EAAE;IACTE,OAAO,CAACF,KAAK,CAACA,KAAK,CAAC;IACpB,oBAAO;MAAA,WAAK,SAAO,EAACA,KAAK,CAACG,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO;EAC1C;EAEA,IAAIF,SAAS,EAAE;IACb,oBAAO;MAAA,UAAK;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM;EAC9B;;EAIA;EACA,MAAM;IACJG,KAAK;IACLC,KAAK;IACLC,IAAI;IACJC,KAAK;IACLC,OAAO;IACPC,IAAI;IACJC,OAAO;IACPC,QAAQ;IACRC;EACF,CAAC,GAAGb,IAAI;EAER,MAAM;IAAEc,WAAW;IAAEC;EAAU,CAAC,GAAG3B,kBAAkB,CAACqB,OAAO,CAAC;;EAE9D;EACA,MAAMO,OAAO,GAAG;IAAEC,GAAG,EAAE,SAAS;IAAEC,KAAK,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAU,CAAC;;EAElE;EACA,MAAMC,aAAa,GAAIC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,UAAU,GAAG3B,YAAY,CAAC4B,OAAO,CAACC,KAAK;;IAE7C;EACF,CAAC;;EAED;EACA;EACA;;EAEA,oBACE;IAAA,wBACE;MAAA,uBACE,QAAC,SAAS;QAAA,UAEN,CAACC,OAAO,IAAI,CAACzB;MAAK;QAAA;QAAA;QAAA;MAAA;IAGV;MAAA;MAAA;MAAA;IAAA,QACJ,eACV,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACb;AAEP,CAAC;AAAC,GAjEIP,WAAW;EAAA,QACAR,SAAS,EAQiBM,QAAQ;AAAA;AAAA,KAT7CE,WAAW;AAmEjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}